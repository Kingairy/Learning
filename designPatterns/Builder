package designPatterns;

public class Builder {
	/***
	 * Builder Pattern
	 * 
	 * @author wangqizheng
	 * 
	 *         when we create an object just want only some attribute must have
	 *         value, other attribute is not have to have
	 */
	public class User {
		private String name;
		private int age;
		private String post;

		public User() {

		}

		private User(UserBuilder userBuilder) {
			this.name = userBuilder.name;
			this.age = userBuilder.age;
			this.post = userBuilder.post;
		}

		public String getName() {
			return name;
		}

		public void setName(String name) {
			this.name = name;
		}

		public int getAge() {
			return age;
		}

		public void setAge(int age) {
			this.age = age;
		}

		public String getPost() {
			return post;
		}

		public void setPost(String post) {
			this.post = post;
		}

		public class UserBuilder {

			private String name;
			private int age;
			private String post;

			public UserBuilder(String name, int age) {
				this.name = name;
				this.age = age;
			}

			public UserBuilder post(String post) {
				this.post = post;
				return this;
			}

			public User build() {
				return new User(this);
			}
		}

		public User getUser() {
			return new User.UserBuilder("test", 10).post("000000").build();

		}
	}

	public static void main(String[] args) {
		Builder builder = new Builder();
		User user = builder.new User();
		user = user.new UserBuilder("test", 10).post("000000").build();
		System.out.println(user.getName());
	}
}
